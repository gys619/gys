const $ = new Env('店铺签到活动获取');
 var _0xoda='jsjiami.com.v6',_0x20b2=[_0xoda,'PGLCoHA=','woTDkFk=','w4lGRi0=','XRXCp8Kn','wrVi5aaC6LacHWbljq/lm7rDgcKB','PsOrw6g3w6LDsw==','AUMPwq4L','U8OvE3TDhMOgw7wvwrglCW7Cs8K6','AMKtWXt3','TcKtTsK5MQ==','cw4owp8=','w4XCg+Wkj+i1kQkw5YyO5ZqoXMOZ','woQhwpTCqHRiwoc=','O2LCqnA=','SjkQwq3DlA==','ZcOuw5fDi0k=','w4XCtDXDrgENQU1Rd8O3DR9ONDjCsMOqw4BaIMKnw5keACctMSnCrW99w7Q0wrXCr8KiacOgDRvCsj3Dp8Kv','DVILwqEKWUAzw5/CsMKsw5TDqcONasK/','HMOiQjIET8KUwozDpA==','w7fCrRDDjSU=','YMKhG8OQdQ==','AmgRwqEw','RCsCwpHDqA==','IUt5w6w=','wpwfw5nDnn8=','LMK6IcO+wrc=','w4nCghglwrzCrQ==','wr/DolckRQ==','PsOrw6g=','wp4+U8OBw5DCicOCJ0o=','bQ43wonDlw==','fMKcE3o=','e8Oiw4s=','EB7DtsKe','AsOlVw==','ETLDu3XDnw==','wqQlw6fDm3c=','woAow5bDu2c=','w5XCjA0Twqs=','pwVjeMqksXKjGGiamGiM.cEom.v6=='];(function(_0x59a9b9,_0x2e4b14,_0x1d184e){var _0x57b9ad=function(_0x27fcd5,_0x474b87,_0x19cddc,_0x39a416,_0x55f710){_0x474b87=_0x474b87>>0x8,_0x55f710='po';var _0x220311='shift',_0xe3b14='push';if(_0x474b87<_0x27fcd5){while(--_0x27fcd5){_0x39a416=_0x59a9b9[_0x220311]();if(_0x474b87===_0x27fcd5){_0x474b87=_0x39a416;_0x19cddc=_0x59a9b9[_0x55f710+'p']();}else if(_0x474b87&&_0x19cddc['replace'](/[pwVeMqkXKGGGME=]/g,'')===_0x474b87){_0x59a9b9[_0xe3b14](_0x39a416);}}_0x59a9b9[_0xe3b14](_0x59a9b9[_0x220311]());}return 0x7ce55;};return _0x57b9ad(++_0x2e4b14,_0x1d184e)>>_0x2e4b14^_0x1d184e;}(_0x20b2,0x117,0x11700));var _0x1b95=function(_0x2699a9,_0x501e82){_0x2699a9=~~'0x'['concat'](_0x2699a9);var _0x4a9879=_0x20b2[_0x2699a9];if(_0x1b95['mgVGFC']===undefined){(function(){var _0x589c6d=typeof window!=='undefined'?window:typeof process==='object'&&typeof require==='function'&&typeof global==='object'?global:this;var _0x5b08bd='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';_0x589c6d['atob']||(_0x589c6d['atob']=function(_0x4ef491){var _0x11657b=String(_0x4ef491)['replace'](/=+$/,'');for(var _0x26c666=0x0,_0x2ad2ff,_0x4cbc11,_0x425aa0=0x0,_0x51f58a='';_0x4cbc11=_0x11657b['charAt'](_0x425aa0++);~_0x4cbc11&&(_0x2ad2ff=_0x26c666%0x4?_0x2ad2ff*0x40+_0x4cbc11:_0x4cbc11,_0x26c666++%0x4)?_0x51f58a+=String['fromCharCode'](0xff&_0x2ad2ff>>(-0x2*_0x26c666&0x6)):0x0){_0x4cbc11=_0x5b08bd['indexOf'](_0x4cbc11);}return _0x51f58a;});}());var _0x4e130a=function(_0x327155,_0x501e82){var _0x44b31e=[],_0x58157c=0x0,_0x1d33e,_0x4086cd='',_0x4880bf='';_0x327155=atob(_0x327155);for(var _0x5f7f12=0x0,_0x11bf85=_0x327155['length'];_0x5f7f12<_0x11bf85;_0x5f7f12++){_0x4880bf+='%'+('00'+_0x327155['charCodeAt'](_0x5f7f12)['toString'](0x10))['slice'](-0x2);}_0x327155=decodeURIComponent(_0x4880bf);for(var _0x2a1a7e=0x0;_0x2a1a7e<0x100;_0x2a1a7e++){_0x44b31e[_0x2a1a7e]=_0x2a1a7e;}for(_0x2a1a7e=0x0;_0x2a1a7e<0x100;_0x2a1a7e++){_0x58157c=(_0x58157c+_0x44b31e[_0x2a1a7e]+_0x501e82['charCodeAt'](_0x2a1a7e%_0x501e82['length']))%0x100;_0x1d33e=_0x44b31e[_0x2a1a7e];_0x44b31e[_0x2a1a7e]=_0x44b31e[_0x58157c];_0x44b31e[_0x58157c]=_0x1d33e;}_0x2a1a7e=0x0;_0x58157c=0x0;for(var _0x3717e1=0x0;_0x3717e1<_0x327155['length'];_0x3717e1++){_0x2a1a7e=(_0x2a1a7e+0x1)%0x100;_0x58157c=(_0x58157c+_0x44b31e[_0x2a1a7e])%0x100;_0x1d33e=_0x44b31e[_0x2a1a7e];_0x44b31e[_0x2a1a7e]=_0x44b31e[_0x58157c];_0x44b31e[_0x58157c]=_0x1d33e;_0x4086cd+=String['fromCharCode'](_0x327155['charCodeAt'](_0x3717e1)^_0x44b31e[(_0x44b31e[_0x2a1a7e]+_0x44b31e[_0x58157c])%0x100]);}return _0x4086cd;};_0x1b95['qbvXAj']=_0x4e130a;_0x1b95['YdJqYf']={};_0x1b95['mgVGFC']=!![];}var _0xfdf934=_0x1b95['YdJqYf'][_0x2699a9];if(_0xfdf934===undefined){if(_0x1b95['NxOMCQ']===undefined){_0x1b95['NxOMCQ']=!![];}_0x4a9879=_0x1b95['qbvXAj'](_0x4a9879,_0x501e82);_0x1b95['YdJqYf'][_0x2699a9]=_0x4a9879;}else{_0x4a9879=_0xfdf934;}return _0x4a9879;};const req=$request;!(async()=>{url=req['url'];reqBody=url[_0x1b95('0','rSaV')](/\{.*\}/);if(reqBody){reqBody=JSON['parse'](decodeURIComponent(reqBody));if(reqBody[_0x1b95('1','jNT&')](_0x1b95('2','6RaN'))){await update({'token':reqBody[_0x1b95('3','jeXu')]});}}})()['catch'](_0x404212=>{$['log']('','❌\x20'+$[_0x1b95('4','[f*%')]+_0x1b95('5','UTbt')+_0x404212+'!','');})[_0x1b95('6','G8Fi')](()=>{$[_0x1b95('7','FanJ')]();});function update(_0x3b7846){var _0x243b9e={'uDddW':_0x1b95('8','[f*%'),'LgIHW':_0x1b95('9','kn(l'),'nJjlS':function(_0x72c875,_0x1b47a4){return _0x72c875===_0x1b47a4;},'YDGkZ':function(_0x941ee2){return _0x941ee2();}};let _0x1201e2={'url':_0x1b95('a','y1uG'),'headers':{'Content-Type':_0x1b95('b','rSaV')},'body':JSON[_0x1b95('c','%XVa')](_0x3b7846)};return new Promise(_0x358950=>{var _0x4bccfc={'VAiPm':_0x243b9e['uDddW'],'yQyBv':function(_0x58dd79,_0x10c0bc){return _0x58dd79!==_0x10c0bc;},'OIITF':_0x1b95('d','y1uG'),'kDxtV':_0x243b9e[_0x1b95('e','E%sv')],'vvFdM':function(_0x66ddf,_0x16ee48){return _0x243b9e[_0x1b95('f','rSaV')](_0x66ddf,_0x16ee48);},'IkJqq':function(_0x451b0b){return _0x243b9e[_0x1b95('10','[f*%')](_0x451b0b);}};$[_0x1b95('11','8Alm')](_0x1201e2,(_0x1c831a,_0xcef8e3,_0x179077)=>{try{if(_0x1b95('12','&c5*')===_0x1b95('13','451o')){$[_0x1b95('14','^Ya]')](error);}else{if(_0x1c831a){if(_0x4bccfc['VAiPm']!==_0x4bccfc[_0x1b95('15','UTbt')]){if(_0x1c831a){console[_0x1b95('16','QMHY')](''+JSON[_0x1b95('17','fAL4')](_0x1c831a));}else{_0x179077=JSON[_0x1b95('18','[f*%')](_0x179077);if(_0x179077&&_0x179077[_0x1b95('19','SGs]')]===0xc8){$[_0x1b95('1a','VPzV')](''+$[_0x1b95('1b','1N0N')],''+_0x179077[_0x1b95('1c','%XVa')]);}}}else{console['log'](''+JSON['stringify'](_0x1c831a));}}else{if(_0x4bccfc[_0x1b95('1d','*CdY')](_0x4bccfc[_0x1b95('1e','&c5*')],_0x4bccfc[_0x1b95('1f','&c5*')])){_0x179077=JSON[_0x1b95('20','^Ya]')](_0x179077);if(_0x179077&&_0x4bccfc['vvFdM'](_0x179077[_0x1b95('21','FanJ')],0xc8)){$[_0x1b95('22','UTbt')](''+$[_0x1b95('23','hbOg')],''+_0x179077['msg']);}}else{$['log']('','❌\x20'+$[_0x1b95('24','ov@l')]+_0x1b95('25','XUSm')+e+'!','');}}}}catch(_0x312504){$[_0x1b95('26','QMHY')](_0x312504);}finally{_0x4bccfc['IkJqq'](_0x358950);}});});};_0xoda='jsjiami.com.v6';
// prettier-ignore
function Env(t, e) { "undefined" != typeof process && JSON.stringify(process.env).indexOf("GITHUB") > -1 && process.exit(0); class s { constructor(t) { this.env = t } send(t, e = "GET") { t = "string" == typeof t ? { url: t } : t; let s = this.get; return "POST" === e && (s = this.post), new Promise((e, i) => { s.call(this, t, (t, s, r) => { t ? i(t) : e(s) }) }) } get(t) { return this.send.call(this.env, t) } post(t) { return this.send.call(this.env, t, "POST") } } return new class { constructor(t, e) { this.name = t, this.http = new s(this), this.data = null, this.dataFile = "box.dat", this.logs = [], this.isMute = !1, this.isNeedRewrite = !1, this.logSeparator = "\n", this.startTime = (new Date).getTime(), Object.assign(this, e), this.log("", `🔔${this.name}, 开始!`) } isNode() { return "undefined" != typeof module && !!module.exports } isQuanX() { return "undefined" != typeof $task } isSurge() { return "undefined" != typeof $httpClient && "undefined" == typeof $loon } isLoon() { return "undefined" != typeof $loon } toObj(t, e = null) { try { return JSON.parse(t) } catch { return e } } toStr(t, e = null) { try { return JSON.stringify(t) } catch { return e } } getjson(t, e) { let s = e; const i = this.getdata(t); if (i) try { s = JSON.parse(this.getdata(t)) } catch { } return s } setjson(t, e) { try { return this.setdata(JSON.stringify(t), e) } catch { return !1 } } getScript(t) { return new Promise(e => { this.get({ url: t }, (t, s, i) => e(i)) }) } runScript(t, e) { return new Promise(s => { let i = this.getdata("@chavy_boxjs_userCfgs.httpapi"); i = i ? i.replace(/\n/g, "").trim() : i; let r = this.getdata("@chavy_boxjs_userCfgs.httpapi_timeout"); r = r ? 1 * r : 20, r = e && e.timeout ? e.timeout : r; const [o, h] = i.split("@"), n = { url: `http://${h}/v1/scripting/evaluate`, body: { script_text: t, mock_type: "cron", timeout: r }, headers: { "X-Key": o, Accept: "*/*" } }; this.post(n, (t, e, i) => s(i)) }).catch(t => this.logErr(t)) } loaddata() { if (!this.isNode()) return {}; { this.fs = this.fs ? this.fs : require("fs"), this.path = this.path ? this.path : require("path"); const t = this.path.resolve(this.dataFile), e = this.path.resolve(process.cwd(), this.dataFile), s = this.fs.existsSync(t), i = !s && this.fs.existsSync(e); if (!s && !i) return {}; { const i = s ? t : e; try { return JSON.parse(this.fs.readFileSync(i)) } catch (t) { return {} } } } } writedata() { if (this.isNode()) { this.fs = this.fs ? this.fs : require("fs"), this.path = this.path ? this.path : require("path"); const t = this.path.resolve(this.dataFile), e = this.path.resolve(process.cwd(), this.dataFile), s = this.fs.existsSync(t), i = !s && this.fs.existsSync(e), r = JSON.stringify(this.data); s ? this.fs.writeFileSync(t, r) : i ? this.fs.writeFileSync(e, r) : this.fs.writeFileSync(t, r) } } lodash_get(t, e, s) { const i = e.replace(/\[(\d+)\]/g, ".$1").split("."); let r = t; for (const t of i) if (r = Object(r)[t], void 0 === r) return s; return r } lodash_set(t, e, s) { return Object(t) !== t ? t : (Array.isArray(e) || (e = e.toString().match(/[^.[\]]+/g) || []), e.slice(0, -1).reduce((t, s, i) => Object(t[s]) === t[s] ? t[s] : t[s] = Math.abs(e[i + 1]) >> 0 == +e[i + 1] ? [] : {}, t)[e[e.length - 1]] = s, t) } getdata(t) { let e = this.getval(t); if (/^@/.test(t)) { const [, s, i] = /^@(.*?)\.(.*?)$/.exec(t), r = s ? this.getval(s) : ""; if (r) try { const t = JSON.parse(r); e = t ? this.lodash_get(t, i, "") : e } catch (t) { e = "" } } return e } setdata(t, e) { let s = !1; if (/^@/.test(e)) { const [, i, r] = /^@(.*?)\.(.*?)$/.exec(e), o = this.getval(i), h = i ? "null" === o ? null : o || "{}" : "{}"; try { const e = JSON.parse(h); this.lodash_set(e, r, t), s = this.setval(JSON.stringify(e), i) } catch (e) { const o = {}; this.lodash_set(o, r, t), s = this.setval(JSON.stringify(o), i) } } else s = this.setval(t, e); return s } getval(t) { return this.isSurge() || this.isLoon() ? $persistentStore.read(t) : this.isQuanX() ? $prefs.valueForKey(t) : this.isNode() ? (this.data = this.loaddata(), this.data[t]) : this.data && this.data[t] || null } setval(t, e) { return this.isSurge() || this.isLoon() ? $persistentStore.write(t, e) : this.isQuanX() ? $prefs.setValueForKey(t, e) : this.isNode() ? (this.data = this.loaddata(), this.data[e] = t, this.writedata(), !0) : this.data && this.data[e] || null } initGotEnv(t) { this.got = this.got ? this.got : require("got"), this.cktough = this.cktough ? this.cktough : require("tough-cookie"), this.ckjar = this.ckjar ? this.ckjar : new this.cktough.CookieJar, t && (t.headers = t.headers ? t.headers : {}, void 0 === t.headers.Cookie && void 0 === t.cookieJar && (t.cookieJar = this.ckjar)) } get(t, e = (() => { })) { t.headers && (delete t.headers["Content-Type"], delete t.headers["Content-Length"]), this.isSurge() || this.isLoon() ? (this.isSurge() && this.isNeedRewrite && (t.headers = t.headers || {}, Object.assign(t.headers, { "X-Surge-Skip-Scripting": !1 })), $httpClient.get(t, (t, s, i) => { !t && s && (s.body = i, s.statusCode = s.status), e(t, s, i) })) : this.isQuanX() ? (this.isNeedRewrite && (t.opts = t.opts || {}, Object.assign(t.opts, { hints: !1 })), $task.fetch(t).then(t => { const { statusCode: s, statusCode: i, headers: r, body: o } = t; e(null, { status: s, statusCode: i, headers: r, body: o }, o) }, t => e(t))) : this.isNode() && (this.initGotEnv(t), this.got(t).on("redirect", (t, e) => { try { if (t.headers["set-cookie"]) { const s = t.headers["set-cookie"].map(this.cktough.Cookie.parse).toString(); s && this.ckjar.setCookieSync(s, null), e.cookieJar = this.ckjar } } catch (t) { this.logErr(t) } }).then(t => { const { statusCode: s, statusCode: i, headers: r, body: o } = t; e(null, { status: s, statusCode: i, headers: r, body: o }, o) }, t => { const { message: s, response: i } = t; e(s, i, i && i.body) })) } post(t, e = (() => { })) { if (t.body && t.headers && !t.headers["Content-Type"] && (t.headers["Content-Type"] = "application/x-www-form-urlencoded"), t.headers && delete t.headers["Content-Length"], this.isSurge() || this.isLoon()) this.isSurge() && this.isNeedRewrite && (t.headers = t.headers || {}, Object.assign(t.headers, { "X-Surge-Skip-Scripting": !1 })), $httpClient.post(t, (t, s, i) => { !t && s && (s.body = i, s.statusCode = s.status), e(t, s, i) }); else if (this.isQuanX()) t.method = "POST", this.isNeedRewrite && (t.opts = t.opts || {}, Object.assign(t.opts, { hints: !1 })), $task.fetch(t).then(t => { const { statusCode: s, statusCode: i, headers: r, body: o } = t; e(null, { status: s, statusCode: i, headers: r, body: o }, o) }, t => e(t)); else if (this.isNode()) { this.initGotEnv(t); const { url: s, ...i } = t; this.got.post(s, i).then(t => { const { statusCode: s, statusCode: i, headers: r, body: o } = t; e(null, { status: s, statusCode: i, headers: r, body: o }, o) }, t => { const { message: s, response: i } = t; e(s, i, i && i.body) }) } } time(t, e = null) { const s = e ? new Date(e) : new Date; let i = { "M+": s.getMonth() + 1, "d+": s.getDate(), "H+": s.getHours(), "m+": s.getMinutes(), "s+": s.getSeconds(), "q+": Math.floor((s.getMonth() + 3) / 3), S: s.getMilliseconds() }; /(y+)/.test(t) && (t = t.replace(RegExp.$1, (s.getFullYear() + "").substr(4 - RegExp.$1.length))); for (let e in i) new RegExp("(" + e + ")").test(t) && (t = t.replace(RegExp.$1, 1 == RegExp.$1.length ? i[e] : ("00" + i[e]).substr(("" + i[e]).length))); return t } msg(e = t, s = "", i = "", r) { const o = t => { if (!t) return t; if ("string" == typeof t) return this.isLoon() ? t : this.isQuanX() ? { "open-url": t } : this.isSurge() ? { url: t } : void 0; if ("object" == typeof t) { if (this.isLoon()) { let e = t.openUrl || t.url || t["open-url"], s = t.mediaUrl || t["media-url"]; return { openUrl: e, mediaUrl: s } } if (this.isQuanX()) { let e = t["open-url"] || t.url || t.openUrl, s = t["media-url"] || t.mediaUrl; return { "open-url": e, "media-url": s } } if (this.isSurge()) { let e = t.url || t.openUrl || t["open-url"]; return { url: e } } } }; if (this.isMute || (this.isSurge() || this.isLoon() ? $notification.post(e, s, i, o(r)) : this.isQuanX() && $notify(e, s, i, o(r))), !this.isMuteLog) { let t = ["", "==============📣系统通知📣=============="]; t.push(e), s && t.push(s), i && t.push(i), console.log(t.join("\n")), this.logs = this.logs.concat(t) } } log(...t) { t.length > 0 && (this.logs = [...this.logs, ...t]), console.log(t.join(this.logSeparator)) } logErr(t, e) { const s = !this.isSurge() && !this.isQuanX() && !this.isLoon(); s ? this.log("", `❗️${this.name}, 错误!`, t.stack) : this.log("", `❗️${this.name}, 错误!`, t) } wait(t) { return new Promise(e => setTimeout(e, t)) } done(t = {}) { const e = (new Date).getTime(), s = (e - this.startTime) / 1e3; this.log("", `🔔${this.name}, 结束! 🕛 ${s} 秒`), this.log(), (this.isSurge() || this.isQuanX() || this.isLoon()) && $done(t) } }(t, e) }
