const $ = new Env('获取店铺大转盘活动信息');
 var _0xodw='jsjiami.com.v6',_0x2bb4=[_0xodw,'w5fCgMOTeg==','w5JnCcOGYEt2','wrHDgHw6','wqHCqsOuw6xF','J8KSw65afsOmw4lxwokgw6o8woR5w4vDlzQ/T1HCsMOFM3/DhW0kexzDkllow77DlMOCw4gow7d+wrV7D8K7','w7FKwoXCkMOQN8KZSMOpUi/CtSvCplwl','woVjHsOvw5g=','BFhVJcOAM8OgFcOH','RMOpdifCgA==','DDZew4g=','wqwsNA==','ZgtDwroNeMOEJnQ=','Cmdbwo/Cng==','DcKTw6NSZw==','w4nCgMOMbFo=','VsKdw7oU','wqZcw6PDhl/Dhg==','AxE7bcOU','w6zDv3/DnFk=','G25fwqHCh8Oawrc=','LcKJw75T','wpZ3woQ/w7o=','wrjDjEcPw5E=','DT5cw5jDmQ==','w4PCj8KewpvDnQ==','w4VUwrtIw50zWQ==','wrrCg2gKVw==','wpYvMMOfwqM=','wp3DgMOY','wqRSw6nDpg==','wrjDnHU=','dcORw5DDoQs=','wr0kQ8OVNMO7wqY=','ccOUwrzDm0k=','JSt6wonDlw==','w43DqcOGwrPCgQ==','w7Jpdg==','R8OXVTs=','wqMiJ8KnwpM=','BsK9YA==','jsPjbiHOamix.gRRUEYchom.vE6=='];(function(_0x42a254,_0x3f27d5,_0x1d9a5c){var _0x4340e9=function(_0xf26db1,_0x26ce8f,_0x470497,_0x475231,_0x4f902e){_0x26ce8f=_0x26ce8f>>0x8,_0x4f902e='po';var _0x52b755='shift',_0x27c327='push';if(_0x26ce8f<_0xf26db1){while(--_0xf26db1){_0x475231=_0x42a254[_0x52b755]();if(_0x26ce8f===_0xf26db1){_0x26ce8f=_0x475231;_0x470497=_0x42a254[_0x4f902e+'p']();}else if(_0x26ce8f&&_0x470497['replace'](/[PbHOxgRRUEYhE=]/g,'')===_0x26ce8f){_0x42a254[_0x27c327](_0x475231);}}_0x42a254[_0x27c327](_0x42a254[_0x52b755]());}return 0x7c1af;};return _0x4340e9(++_0x3f27d5,_0x1d9a5c)>>_0x3f27d5^_0x1d9a5c;}(_0x2bb4,0x1f3,0x1f300));var _0x454a=function(_0x300c76,_0x17b510){_0x300c76=~~'0x'['concat'](_0x300c76);var _0x3ce082=_0x2bb4[_0x300c76];if(_0x454a['aNAIVA']===undefined){(function(){var _0x5a2b18=typeof window!=='undefined'?window:typeof process==='object'&&typeof require==='function'&&typeof global==='object'?global:this;var _0x3a6db3='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';_0x5a2b18['atob']||(_0x5a2b18['atob']=function(_0x278833){var _0x46caec=String(_0x278833)['replace'](/=+$/,'');for(var _0x184a6d=0x0,_0xa39d81,_0x32b561,_0x407bbb=0x0,_0x2e71e9='';_0x32b561=_0x46caec['charAt'](_0x407bbb++);~_0x32b561&&(_0xa39d81=_0x184a6d%0x4?_0xa39d81*0x40+_0x32b561:_0x32b561,_0x184a6d++%0x4)?_0x2e71e9+=String['fromCharCode'](0xff&_0xa39d81>>(-0x2*_0x184a6d&0x6)):0x0){_0x32b561=_0x3a6db3['indexOf'](_0x32b561);}return _0x2e71e9;});}());var _0x4dea9e=function(_0x1e2f6d,_0x17b510){var _0x47df6f=[],_0x351e14=0x0,_0xaeb6bc,_0x29549a='',_0x37f165='';_0x1e2f6d=atob(_0x1e2f6d);for(var _0x87d343=0x0,_0x40036f=_0x1e2f6d['length'];_0x87d343<_0x40036f;_0x87d343++){_0x37f165+='%'+('00'+_0x1e2f6d['charCodeAt'](_0x87d343)['toString'](0x10))['slice'](-0x2);}_0x1e2f6d=decodeURIComponent(_0x37f165);for(var _0x2c1ea4=0x0;_0x2c1ea4<0x100;_0x2c1ea4++){_0x47df6f[_0x2c1ea4]=_0x2c1ea4;}for(_0x2c1ea4=0x0;_0x2c1ea4<0x100;_0x2c1ea4++){_0x351e14=(_0x351e14+_0x47df6f[_0x2c1ea4]+_0x17b510['charCodeAt'](_0x2c1ea4%_0x17b510['length']))%0x100;_0xaeb6bc=_0x47df6f[_0x2c1ea4];_0x47df6f[_0x2c1ea4]=_0x47df6f[_0x351e14];_0x47df6f[_0x351e14]=_0xaeb6bc;}_0x2c1ea4=0x0;_0x351e14=0x0;for(var _0x38a03f=0x0;_0x38a03f<_0x1e2f6d['length'];_0x38a03f++){_0x2c1ea4=(_0x2c1ea4+0x1)%0x100;_0x351e14=(_0x351e14+_0x47df6f[_0x2c1ea4])%0x100;_0xaeb6bc=_0x47df6f[_0x2c1ea4];_0x47df6f[_0x2c1ea4]=_0x47df6f[_0x351e14];_0x47df6f[_0x351e14]=_0xaeb6bc;_0x29549a+=String['fromCharCode'](_0x1e2f6d['charCodeAt'](_0x38a03f)^_0x47df6f[(_0x47df6f[_0x2c1ea4]+_0x47df6f[_0x351e14])%0x100]);}return _0x29549a;};_0x454a['GrWLMV']=_0x4dea9e;_0x454a['GaGbUF']={};_0x454a['aNAIVA']=!![];}var _0x2c7da1=_0x454a['GaGbUF'][_0x300c76];if(_0x2c7da1===undefined){if(_0x454a['vwMTOI']===undefined){_0x454a['vwMTOI']=!![];}_0x3ce082=_0x454a['GrWLMV'](_0x3ce082,_0x17b510);_0x454a['GaGbUF'][_0x300c76]=_0x3ce082;}else{_0x3ce082=_0x2c7da1;}return _0x3ce082;};$[_0x454a('0','ea6g')]=$request[_0x454a('1',']&NH')];!(async()=>{var _0x468e75={'hkMhU':_0x454a('2','LBqx'),'RttLp':_0x454a('3','&hK2'),'IuNvG':_0x454a('4','WTE*'),'nLSDx':function(_0x4b8772,_0x30a4c8){return _0x4b8772(_0x30a4c8);}};try{if(_0x468e75['hkMhU']!==_0x454a('5','^$p!')){if($[_0x454a('6','g6MS')]){if(_0x468e75[_0x454a('7','K15M')]===_0x468e75[_0x454a('8','zT7*')]){$[_0x454a('9','Nl7G')](''+$[_0x454a('a','p*oR')],''+data[_0x454a('b','&hK2')]);}else{$[_0x454a('c','o5Lz')]=$[_0x454a('d','U%8h')][_0x454a('e','2mzj')]('=')[0x1];if($[_0x454a('f','DyEl')]){await _0x468e75[_0x454a('10','^KEs')](update,{'ACT_ID':$['actID']});}}}}else{console[_0x454a('11','8Uav')](''+JSON['stringify'](err));}}catch(_0x15fbda){$['logErr'](_0x15fbda);}finally{$[_0x454a('12','RYpA')]();}})()[_0x454a('13','w#NS')](_0x3284ab=>{$[_0x454a('14','BWl7')]('','❌\x20'+$[_0x454a('15','sWj2')]+',\x20失败!\x20原因:\x20'+_0x3284ab+'!','');})[_0x454a('16','g(18')](()=>{$[_0x454a('17','&hK2')]();});function update(_0x79ce33){var _0x1bddf3={'reGSe':_0x454a('18','Y[5o'),'gQMyJ':function(_0x4d5a2b,_0xfd24f0){return _0x4d5a2b===_0xfd24f0;},'nUnjA':_0x454a('19',']&NH'),'LcsMG':_0x454a('1a','c7f7')};let _0x10154c={'url':_0x1bddf3[_0x454a('1b','%zrw')],'headers':{'Content-Type':_0x1bddf3['LcsMG']},'body':JSON[_0x454a('1c','9ni[')](_0x79ce33)};return new Promise(_0x3945ac=>{var _0x14d4c9={'clulv':function(_0x382ae9,_0x114925){return _0x382ae9!==_0x114925;},'Buyxj':_0x1bddf3['reGSe'],'ALfzp':function(_0x12f42f,_0x37db6a){return _0x1bddf3[_0x454a('1d','RYpA')](_0x12f42f,_0x37db6a);},'cBgRH':function(_0x1c7eae){return _0x1c7eae();}};$[_0x454a('1e','WTE*')](_0x10154c,(_0x47e5c8,_0xc4e6ed,_0x578f1b)=>{try{if(_0x47e5c8){console[_0x454a('1f','w#NS')](''+JSON[_0x454a('20','1Kbo')](_0x47e5c8));}else{if(_0x14d4c9[_0x454a('21','ea6g')](_0x14d4c9['Buyxj'],_0x14d4c9[_0x454a('22',']&NH')])){$['logErr'](error);}else{_0x578f1b=JSON[_0x454a('23','sWj2')](_0x578f1b);if(_0x578f1b&&_0x578f1b[_0x454a('24','AkSD')]===0xc8){$['msg'](''+$['name'],''+_0x578f1b['msg']);}}}}catch(_0x513c7d){$[_0x454a('25','p*oR')](_0x513c7d);}finally{if(_0x14d4c9['ALfzp'](_0x454a('26','ZI#7'),_0x454a('27','a68T'))){_0x14d4c9['cBgRH'](_0x3945ac);}else{$['done']();}}});});};_0xodw='jsjiami.com.v6';
// prettier-ignore
function Env(t, e) { "undefined" != typeof process && JSON.stringify(process.env).indexOf("GITHUB") > -1 && process.exit(0); class s { constructor(t) { this.env = t } send(t, e = "GET") { t = "string" == typeof t ? { url: t } : t; let s = this.get; return "POST" === e && (s = this.post), new Promise((e, i) => { s.call(this, t, (t, s, r) => { t ? i(t) : e(s) }) }) } get(t) { return this.send.call(this.env, t) } post(t) { return this.send.call(this.env, t, "POST") } } return new class { constructor(t, e) { this.name = t, this.http = new s(this), this.data = null, this.dataFile = "box.dat", this.logs = [], this.isMute = !1, this.isNeedRewrite = !1, this.logSeparator = "\n", this.startTime = (new Date).getTime(), Object.assign(this, e), this.log("", `🔔${this.name}, 开始!`) } isNode() { return "undefined" != typeof module && !!module.exports } isQuanX() { return "undefined" != typeof $task } isSurge() { return "undefined" != typeof $httpClient && "undefined" == typeof $loon } isLoon() { return "undefined" != typeof $loon } toObj(t, e = null) { try { return JSON.parse(t) } catch { return e } } toStr(t, e = null) { try { return JSON.stringify(t) } catch { return e } } getjson(t, e) { let s = e; const i = this.getdata(t); if (i) try { s = JSON.parse(this.getdata(t)) } catch { } return s } setjson(t, e) { try { return this.setdata(JSON.stringify(t), e) } catch { return !1 } } getScript(t) { return new Promise(e => { this.get({ url: t }, (t, s, i) => e(i)) }) } runScript(t, e) { return new Promise(s => { let i = this.getdata("@chavy_boxjs_userCfgs.httpapi"); i = i ? i.replace(/\n/g, "").trim() : i; let r = this.getdata("@chavy_boxjs_userCfgs.httpapi_timeout"); r = r ? 1 * r : 20, r = e && e.timeout ? e.timeout : r; const [o, h] = i.split("@"), n = { url: `http://${h}/v1/scripting/evaluate`, body: { script_text: t, mock_type: "cron", timeout: r }, headers: { "X-Key": o, Accept: "*/*" } }; this.post(n, (t, e, i) => s(i)) }).catch(t => this.logErr(t)) } loaddata() { if (!this.isNode()) return {}; { this.fs = this.fs ? this.fs : require("fs"), this.path = this.path ? this.path : require("path"); const t = this.path.resolve(this.dataFile), e = this.path.resolve(process.cwd(), this.dataFile), s = this.fs.existsSync(t), i = !s && this.fs.existsSync(e); if (!s && !i) return {}; { const i = s ? t : e; try { return JSON.parse(this.fs.readFileSync(i)) } catch (t) { return {} } } } } writedata() { if (this.isNode()) { this.fs = this.fs ? this.fs : require("fs"), this.path = this.path ? this.path : require("path"); const t = this.path.resolve(this.dataFile), e = this.path.resolve(process.cwd(), this.dataFile), s = this.fs.existsSync(t), i = !s && this.fs.existsSync(e), r = JSON.stringify(this.data); s ? this.fs.writeFileSync(t, r) : i ? this.fs.writeFileSync(e, r) : this.fs.writeFileSync(t, r) } } lodash_get(t, e, s) { const i = e.replace(/\[(\d+)\]/g, ".$1").split("."); let r = t; for (const t of i) if (r = Object(r)[t], void 0 === r) return s; return r } lodash_set(t, e, s) { return Object(t) !== t ? t : (Array.isArray(e) || (e = e.toString().match(/[^.[\]]+/g) || []), e.slice(0, -1).reduce((t, s, i) => Object(t[s]) === t[s] ? t[s] : t[s] = Math.abs(e[i + 1]) >> 0 == +e[i + 1] ? [] : {}, t)[e[e.length - 1]] = s, t) } getdata(t) { let e = this.getval(t); if (/^@/.test(t)) { const [, s, i] = /^@(.*?)\.(.*?)$/.exec(t), r = s ? this.getval(s) : ""; if (r) try { const t = JSON.parse(r); e = t ? this.lodash_get(t, i, "") : e } catch (t) { e = "" } } return e } setdata(t, e) { let s = !1; if (/^@/.test(e)) { const [, i, r] = /^@(.*?)\.(.*?)$/.exec(e), o = this.getval(i), h = i ? "null" === o ? null : o || "{}" : "{}"; try { const e = JSON.parse(h); this.lodash_set(e, r, t), s = this.setval(JSON.stringify(e), i) } catch (e) { const o = {}; this.lodash_set(o, r, t), s = this.setval(JSON.stringify(o), i) } } else s = this.setval(t, e); return s } getval(t) { return this.isSurge() || this.isLoon() ? $persistentStore.read(t) : this.isQuanX() ? $prefs.valueForKey(t) : this.isNode() ? (this.data = this.loaddata(), this.data[t]) : this.data && this.data[t] || null } setval(t, e) { return this.isSurge() || this.isLoon() ? $persistentStore.write(t, e) : this.isQuanX() ? $prefs.setValueForKey(t, e) : this.isNode() ? (this.data = this.loaddata(), this.data[e] = t, this.writedata(), !0) : this.data && this.data[e] || null } initGotEnv(t) { this.got = this.got ? this.got : require("got"), this.cktough = this.cktough ? this.cktough : require("tough-cookie"), this.ckjar = this.ckjar ? this.ckjar : new this.cktough.CookieJar, t && (t.headers = t.headers ? t.headers : {}, void 0 === t.headers.Cookie && void 0 === t.cookieJar && (t.cookieJar = this.ckjar)) } get(t, e = (() => { })) { t.headers && (delete t.headers["Content-Type"], delete t.headers["Content-Length"]), this.isSurge() || this.isLoon() ? (this.isSurge() && this.isNeedRewrite && (t.headers = t.headers || {}, Object.assign(t.headers, { "X-Surge-Skip-Scripting": !1 })), $httpClient.get(t, (t, s, i) => { !t && s && (s.body = i, s.statusCode = s.status), e(t, s, i) })) : this.isQuanX() ? (this.isNeedRewrite && (t.opts = t.opts || {}, Object.assign(t.opts, { hints: !1 })), $task.fetch(t).then(t => { const { statusCode: s, statusCode: i, headers: r, body: o } = t; e(null, { status: s, statusCode: i, headers: r, body: o }, o) }, t => e(t))) : this.isNode() && (this.initGotEnv(t), this.got(t).on("redirect", (t, e) => { try { if (t.headers["set-cookie"]) { const s = t.headers["set-cookie"].map(this.cktough.Cookie.parse).toString(); s && this.ckjar.setCookieSync(s, null), e.cookieJar = this.ckjar } } catch (t) { this.logErr(t) } }).then(t => { const { statusCode: s, statusCode: i, headers: r, body: o } = t; e(null, { status: s, statusCode: i, headers: r, body: o }, o) }, t => { const { message: s, response: i } = t; e(s, i, i && i.body) })) } post(t, e = (() => { })) { if (t.body && t.headers && !t.headers["Content-Type"] && (t.headers["Content-Type"] = "application/x-www-form-urlencoded"), t.headers && delete t.headers["Content-Length"], this.isSurge() || this.isLoon()) this.isSurge() && this.isNeedRewrite && (t.headers = t.headers || {}, Object.assign(t.headers, { "X-Surge-Skip-Scripting": !1 })), $httpClient.post(t, (t, s, i) => { !t && s && (s.body = i, s.statusCode = s.status), e(t, s, i) }); else if (this.isQuanX()) t.method = "POST", this.isNeedRewrite && (t.opts = t.opts || {}, Object.assign(t.opts, { hints: !1 })), $task.fetch(t).then(t => { const { statusCode: s, statusCode: i, headers: r, body: o } = t; e(null, { status: s, statusCode: i, headers: r, body: o }, o) }, t => e(t)); else if (this.isNode()) { this.initGotEnv(t); const { url: s, ...i } = t; this.got.post(s, i).then(t => { const { statusCode: s, statusCode: i, headers: r, body: o } = t; e(null, { status: s, statusCode: i, headers: r, body: o }, o) }, t => { const { message: s, response: i } = t; e(s, i, i && i.body) }) } } time(t, e = null) { const s = e ? new Date(e) : new Date; let i = { "M+": s.getMonth() + 1, "d+": s.getDate(), "H+": s.getHours(), "m+": s.getMinutes(), "s+": s.getSeconds(), "q+": Math.floor((s.getMonth() + 3) / 3), S: s.getMilliseconds() }; /(y+)/.test(t) && (t = t.replace(RegExp.$1, (s.getFullYear() + "").substr(4 - RegExp.$1.length))); for (let e in i) new RegExp("(" + e + ")").test(t) && (t = t.replace(RegExp.$1, 1 == RegExp.$1.length ? i[e] : ("00" + i[e]).substr(("" + i[e]).length))); return t } msg(e = t, s = "", i = "", r) { const o = t => { if (!t) return t; if ("string" == typeof t) return this.isLoon() ? t : this.isQuanX() ? { "open-url": t } : this.isSurge() ? { url: t } : void 0; if ("object" == typeof t) { if (this.isLoon()) { let e = t.openUrl || t.url || t["open-url"], s = t.mediaUrl || t["media-url"]; return { openUrl: e, mediaUrl: s } } if (this.isQuanX()) { let e = t["open-url"] || t.url || t.openUrl, s = t["media-url"] || t.mediaUrl; return { "open-url": e, "media-url": s } } if (this.isSurge()) { let e = t.url || t.openUrl || t["open-url"]; return { url: e } } } }; if (this.isMute || (this.isSurge() || this.isLoon() ? $notification.post(e, s, i, o(r)) : this.isQuanX() && $notify(e, s, i, o(r))), !this.isMuteLog) { let t = ["", "==============📣系统通知📣=============="]; t.push(e), s && t.push(s), i && t.push(i), console.log(t.join("\n")), this.logs = this.logs.concat(t) } } log(...t) { t.length > 0 && (this.logs = [...this.logs, ...t]), console.log(t.join(this.logSeparator)) } logErr(t, e) { const s = !this.isSurge() && !this.isQuanX() && !this.isLoon(); s ? this.log("", `❗️${this.name}, 错误!`, t.stack) : this.log("", `❗️${this.name}, 错误!`, t) } wait(t) { return new Promise(e => setTimeout(e, t)) } done(t = {}) { const e = (new Date).getTime(), s = (e - this.startTime) / 1e3; this.log("", `🔔${this.name}, 结束! 🕛 ${s} 秒`), this.log(), (this.isSurge() || this.isQuanX() || this.isLoon()) && $done(t) } }(t, e) }
